import axios from "axios"
import Head from 'next/head'
import InfiniteScroll from "react-infinite-scroll-component"
import { SingleRepo } from "../../components/SingleRepo"
import { useState } from "react"

const index = ({ repos }) => {
    const [allRepos, setAllRepos] = useState(repos)
    const pageNo = (allRepos.length / 30) + 1

    const getMoreRepos = async () => {
        let res = await axios.get(`https://api.github.com/search/repositories?q=created:>2021-10-20&sort=stars&order=desc&page=${pageNo}`)
        const moreRepos = res.data.items

        console.log("allRepos.length: ", allRepos.length)
        setAllRepos(allRepos => [...allRepos, ...moreRepos])
    }

    return (
        <>
            <Head>
                <title>Trending Repos</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <InfiniteScroll
                dataLength={allRepos.length}
                next={getMoreRepos}
                hasMore={true}
                loader={
                    <p style={{ textAlign: "center" }}>
                        <b>Loading...</b>
                    </p>
                }
                endMessage={
                    <p style={{ textAlign: "center" }}>
                        <b>Yay! You've reached the end.</b>
                    </p>
                }

            >
                {allRepos.map((repo, i) => (
                    <SingleRepo key={i} {...repo} />
                ))}
            </InfiniteScroll>
        </>
    )
}

export const getServerSideProps = async (context) => {
    let res = await axios.get(`https://api.github.com/search/repositories?q=created:>2021-10-20&sort=stars&order=desc`)
    const repos = res.data

    return { props: { repos: repos.items } }
}

export default index
